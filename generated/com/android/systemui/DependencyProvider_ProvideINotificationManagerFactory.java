// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui;

import android.app.INotificationManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DependencyProvider_ProvideINotificationManagerFactory
    implements Factory<INotificationManager> {
  private final DependencyProvider module;

  public DependencyProvider_ProvideINotificationManagerFactory(DependencyProvider module) {
    this.module = module;
  }

  @Override
  public INotificationManager get() {
    return provideInstance(module);
  }

  public static INotificationManager provideInstance(DependencyProvider module) {
    return proxyProvideINotificationManager(module);
  }

  public static DependencyProvider_ProvideINotificationManagerFactory create(
      DependencyProvider module) {
    return new DependencyProvider_ProvideINotificationManagerFactory(module);
  }

  public static INotificationManager proxyProvideINotificationManager(DependencyProvider instance) {
    return Preconditions.checkNotNull(
        instance.provideINotificationManager(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
