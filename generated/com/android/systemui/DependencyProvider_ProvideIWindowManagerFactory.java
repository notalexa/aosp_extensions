// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui;

import android.view.IWindowManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DependencyProvider_ProvideIWindowManagerFactory
    implements Factory<IWindowManager> {
  private final DependencyProvider module;

  public DependencyProvider_ProvideIWindowManagerFactory(DependencyProvider module) {
    this.module = module;
  }

  @Override
  public IWindowManager get() {
    return provideInstance(module);
  }

  public static IWindowManager provideInstance(DependencyProvider module) {
    return proxyProvideIWindowManager(module);
  }

  public static DependencyProvider_ProvideIWindowManagerFactory create(DependencyProvider module) {
    return new DependencyProvider_ProvideIWindowManagerFactory(module);
  }

  public static IWindowManager proxyProvideIWindowManager(DependencyProvider instance) {
    return Preconditions.checkNotNull(
        instance.provideIWindowManager(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
