// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui;

import android.annotation.Nullable;
import android.content.Context;
import android.os.Handler;
import com.android.settingslib.bluetooth.LocalBluetoothManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DependencyProvider_ProvideLocalBluetoothControllerFactory
    implements Factory<LocalBluetoothManager> {
  private final DependencyProvider module;

  private final Provider<Context> contextProvider;

  private final Provider<Handler> bgHandlerProvider;

  public DependencyProvider_ProvideLocalBluetoothControllerFactory(
      DependencyProvider module,
      Provider<Context> contextProvider,
      Provider<Handler> bgHandlerProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.bgHandlerProvider = bgHandlerProvider;
  }

  @Override
  @Nullable
  public LocalBluetoothManager get() {
    return provideInstance(module, contextProvider, bgHandlerProvider);
  }

  @Nullable
  public static LocalBluetoothManager provideInstance(
      DependencyProvider module,
      Provider<Context> contextProvider,
      Provider<Handler> bgHandlerProvider) {
    return proxyProvideLocalBluetoothController(
        module, contextProvider.get(), bgHandlerProvider.get());
  }

  public static DependencyProvider_ProvideLocalBluetoothControllerFactory create(
      DependencyProvider module,
      Provider<Context> contextProvider,
      Provider<Handler> bgHandlerProvider) {
    return new DependencyProvider_ProvideLocalBluetoothControllerFactory(
        module, contextProvider, bgHandlerProvider);
  }

  @Nullable
  public static LocalBluetoothManager proxyProvideLocalBluetoothController(
      DependencyProvider instance, Context context, Handler bgHandler) {
    return instance.provideLocalBluetoothController(context, bgHandler);
  }
}
