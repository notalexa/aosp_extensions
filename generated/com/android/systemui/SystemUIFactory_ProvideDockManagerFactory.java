// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui;

import android.annotation.Nullable;
import android.content.Context;
import com.android.systemui.dock.DockManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class SystemUIFactory_ProvideDockManagerFactory implements Factory<DockManager> {
  private final SystemUIFactory module;

  private final Provider<Context> contextProvider;

  public SystemUIFactory_ProvideDockManagerFactory(
      SystemUIFactory module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  @Nullable
  public DockManager get() {
    return provideInstance(module, contextProvider);
  }

  @Nullable
  public static DockManager provideInstance(
      SystemUIFactory module, Provider<Context> contextProvider) {
    return proxyProvideDockManager(module, contextProvider.get());
  }

  public static SystemUIFactory_ProvideDockManagerFactory create(
      SystemUIFactory module, Provider<Context> contextProvider) {
    return new SystemUIFactory_ProvideDockManagerFactory(module, contextProvider);
  }

  @Nullable
  public static DockManager proxyProvideDockManager(SystemUIFactory instance, Context context) {
    return instance.provideDockManager(context);
  }
}
