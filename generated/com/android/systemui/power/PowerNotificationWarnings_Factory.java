// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.power;

import android.content.Context;
import com.android.systemui.plugins.ActivityStarter;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class PowerNotificationWarnings_Factory implements Factory<PowerNotificationWarnings> {
  private final Provider<Context> contextProvider;

  private final Provider<ActivityStarter> activityStarterProvider;

  public PowerNotificationWarnings_Factory(
      Provider<Context> contextProvider, Provider<ActivityStarter> activityStarterProvider) {
    this.contextProvider = contextProvider;
    this.activityStarterProvider = activityStarterProvider;
  }

  @Override
  public PowerNotificationWarnings get() {
    return provideInstance(contextProvider, activityStarterProvider);
  }

  public static PowerNotificationWarnings provideInstance(
      Provider<Context> contextProvider, Provider<ActivityStarter> activityStarterProvider) {
    return new PowerNotificationWarnings(contextProvider.get(), activityStarterProvider.get());
  }

  public static PowerNotificationWarnings_Factory create(
      Provider<Context> contextProvider, Provider<ActivityStarter> activityStarterProvider) {
    return new PowerNotificationWarnings_Factory(contextProvider, activityStarterProvider);
  }

  public static PowerNotificationWarnings newPowerNotificationWarnings(
      Context context, ActivityStarter activityStarter) {
    return new PowerNotificationWarnings(context, activityStarter);
  }
}
