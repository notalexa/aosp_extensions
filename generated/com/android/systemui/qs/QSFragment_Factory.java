// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.qs;

import android.content.Context;
import com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler;
import com.android.systemui.util.InjectionInflationController;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class QSFragment_Factory implements Factory<QSFragment> {
  private final Provider<RemoteInputQuickSettingsDisabler> remoteInputQsDisablerProvider;

  private final Provider<InjectionInflationController> injectionInflaterProvider;

  private final Provider<Context> contextProvider;

  private final Provider<QSTileHost> qsTileHostProvider;

  public QSFragment_Factory(
      Provider<RemoteInputQuickSettingsDisabler> remoteInputQsDisablerProvider,
      Provider<InjectionInflationController> injectionInflaterProvider,
      Provider<Context> contextProvider,
      Provider<QSTileHost> qsTileHostProvider) {
    this.remoteInputQsDisablerProvider = remoteInputQsDisablerProvider;
    this.injectionInflaterProvider = injectionInflaterProvider;
    this.contextProvider = contextProvider;
    this.qsTileHostProvider = qsTileHostProvider;
  }

  @Override
  public QSFragment get() {
    return provideInstance(
        remoteInputQsDisablerProvider,
        injectionInflaterProvider,
        contextProvider,
        qsTileHostProvider);
  }

  public static QSFragment provideInstance(
      Provider<RemoteInputQuickSettingsDisabler> remoteInputQsDisablerProvider,
      Provider<InjectionInflationController> injectionInflaterProvider,
      Provider<Context> contextProvider,
      Provider<QSTileHost> qsTileHostProvider) {
    return new QSFragment(
        remoteInputQsDisablerProvider.get(),
        injectionInflaterProvider.get(),
        contextProvider.get(),
        qsTileHostProvider.get());
  }

  public static QSFragment_Factory create(
      Provider<RemoteInputQuickSettingsDisabler> remoteInputQsDisablerProvider,
      Provider<InjectionInflationController> injectionInflaterProvider,
      Provider<Context> contextProvider,
      Provider<QSTileHost> qsTileHostProvider) {
    return new QSFragment_Factory(
        remoteInputQsDisablerProvider,
        injectionInflaterProvider,
        contextProvider,
        qsTileHostProvider);
  }

  public static QSFragment newQSFragment(
      RemoteInputQuickSettingsDisabler remoteInputQsDisabler,
      InjectionInflationController injectionInflater,
      Context context,
      QSTileHost qsTileHost) {
    return new QSFragment(remoteInputQsDisabler, injectionInflater, context, qsTileHost);
  }
}
