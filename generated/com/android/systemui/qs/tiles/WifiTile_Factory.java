// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.qs.tiles;

import com.android.systemui.plugins.ActivityStarter;
import com.android.systemui.qs.QSHost;
import com.android.systemui.statusbar.policy.NetworkController;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class WifiTile_Factory implements Factory<WifiTile> {
  private final Provider<QSHost> hostProvider;

  private final Provider<NetworkController> networkControllerProvider;

  private final Provider<ActivityStarter> activityStarterProvider;

  public WifiTile_Factory(
      Provider<QSHost> hostProvider,
      Provider<NetworkController> networkControllerProvider,
      Provider<ActivityStarter> activityStarterProvider) {
    this.hostProvider = hostProvider;
    this.networkControllerProvider = networkControllerProvider;
    this.activityStarterProvider = activityStarterProvider;
  }

  @Override
  public WifiTile get() {
    return provideInstance(hostProvider, networkControllerProvider, activityStarterProvider);
  }

  public static WifiTile provideInstance(
      Provider<QSHost> hostProvider,
      Provider<NetworkController> networkControllerProvider,
      Provider<ActivityStarter> activityStarterProvider) {
    return new WifiTile(
        hostProvider.get(), networkControllerProvider.get(), activityStarterProvider.get());
  }

  public static WifiTile_Factory create(
      Provider<QSHost> hostProvider,
      Provider<NetworkController> networkControllerProvider,
      Provider<ActivityStarter> activityStarterProvider) {
    return new WifiTile_Factory(hostProvider, networkControllerProvider, activityStarterProvider);
  }

  public static WifiTile newWifiTile(
      QSHost host, NetworkController networkController, ActivityStarter activityStarter) {
    return new WifiTile(host, networkController, activityStarter);
  }
}
