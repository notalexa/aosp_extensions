// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.statusbar;

import android.content.Context;
import android.os.Handler;
import com.android.systemui.bubbles.BubbleData;
import com.android.systemui.plugins.statusbar.StatusBarStateController;
import com.android.systemui.statusbar.notification.DynamicPrivacyController;
import com.android.systemui.statusbar.notification.NotificationEntryManager;
import com.android.systemui.statusbar.notification.VisualStabilityManager;
import com.android.systemui.statusbar.phone.NotificationGroupManager;
import com.android.systemui.statusbar.phone.ShadeController;
import dagger.Lazy;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class NotificationViewHierarchyManager_Factory
    implements Factory<NotificationViewHierarchyManager> {
  private final Provider<Context> contextProvider;

  private final Provider<Handler> mainHandlerProvider;

  private final Provider<NotificationLockscreenUserManager>
      notificationLockscreenUserManagerProvider;

  private final Provider<NotificationGroupManager> groupManagerProvider;

  private final Provider<VisualStabilityManager> visualStabilityManagerProvider;

  private final Provider<StatusBarStateController> statusBarStateControllerProvider;

  private final Provider<NotificationEntryManager> notificationEntryManagerProvider;

  private final Provider<ShadeController> shadeControllerProvider;

  private final Provider<BubbleData> bubbleDataProvider;

  private final Provider<DynamicPrivacyController> privacyControllerProvider;

  public NotificationViewHierarchyManager_Factory(
      Provider<Context> contextProvider,
      Provider<Handler> mainHandlerProvider,
      Provider<NotificationLockscreenUserManager> notificationLockscreenUserManagerProvider,
      Provider<NotificationGroupManager> groupManagerProvider,
      Provider<VisualStabilityManager> visualStabilityManagerProvider,
      Provider<StatusBarStateController> statusBarStateControllerProvider,
      Provider<NotificationEntryManager> notificationEntryManagerProvider,
      Provider<ShadeController> shadeControllerProvider,
      Provider<BubbleData> bubbleDataProvider,
      Provider<DynamicPrivacyController> privacyControllerProvider) {
    this.contextProvider = contextProvider;
    this.mainHandlerProvider = mainHandlerProvider;
    this.notificationLockscreenUserManagerProvider = notificationLockscreenUserManagerProvider;
    this.groupManagerProvider = groupManagerProvider;
    this.visualStabilityManagerProvider = visualStabilityManagerProvider;
    this.statusBarStateControllerProvider = statusBarStateControllerProvider;
    this.notificationEntryManagerProvider = notificationEntryManagerProvider;
    this.shadeControllerProvider = shadeControllerProvider;
    this.bubbleDataProvider = bubbleDataProvider;
    this.privacyControllerProvider = privacyControllerProvider;
  }

  @Override
  public NotificationViewHierarchyManager get() {
    return provideInstance(
        contextProvider,
        mainHandlerProvider,
        notificationLockscreenUserManagerProvider,
        groupManagerProvider,
        visualStabilityManagerProvider,
        statusBarStateControllerProvider,
        notificationEntryManagerProvider,
        shadeControllerProvider,
        bubbleDataProvider,
        privacyControllerProvider);
  }

  public static NotificationViewHierarchyManager provideInstance(
      Provider<Context> contextProvider,
      Provider<Handler> mainHandlerProvider,
      Provider<NotificationLockscreenUserManager> notificationLockscreenUserManagerProvider,
      Provider<NotificationGroupManager> groupManagerProvider,
      Provider<VisualStabilityManager> visualStabilityManagerProvider,
      Provider<StatusBarStateController> statusBarStateControllerProvider,
      Provider<NotificationEntryManager> notificationEntryManagerProvider,
      Provider<ShadeController> shadeControllerProvider,
      Provider<BubbleData> bubbleDataProvider,
      Provider<DynamicPrivacyController> privacyControllerProvider) {
    return new NotificationViewHierarchyManager(
        contextProvider.get(),
        mainHandlerProvider.get(),
        notificationLockscreenUserManagerProvider.get(),
        groupManagerProvider.get(),
        visualStabilityManagerProvider.get(),
        statusBarStateControllerProvider.get(),
        notificationEntryManagerProvider.get(),
        DoubleCheck.lazy(shadeControllerProvider),
        bubbleDataProvider.get(),
        privacyControllerProvider.get());
  }

  public static NotificationViewHierarchyManager_Factory create(
      Provider<Context> contextProvider,
      Provider<Handler> mainHandlerProvider,
      Provider<NotificationLockscreenUserManager> notificationLockscreenUserManagerProvider,
      Provider<NotificationGroupManager> groupManagerProvider,
      Provider<VisualStabilityManager> visualStabilityManagerProvider,
      Provider<StatusBarStateController> statusBarStateControllerProvider,
      Provider<NotificationEntryManager> notificationEntryManagerProvider,
      Provider<ShadeController> shadeControllerProvider,
      Provider<BubbleData> bubbleDataProvider,
      Provider<DynamicPrivacyController> privacyControllerProvider) {
    return new NotificationViewHierarchyManager_Factory(
        contextProvider,
        mainHandlerProvider,
        notificationLockscreenUserManagerProvider,
        groupManagerProvider,
        visualStabilityManagerProvider,
        statusBarStateControllerProvider,
        notificationEntryManagerProvider,
        shadeControllerProvider,
        bubbleDataProvider,
        privacyControllerProvider);
  }

  public static NotificationViewHierarchyManager newNotificationViewHierarchyManager(
      Context context,
      Handler mainHandler,
      NotificationLockscreenUserManager notificationLockscreenUserManager,
      NotificationGroupManager groupManager,
      VisualStabilityManager visualStabilityManager,
      StatusBarStateController statusBarStateController,
      NotificationEntryManager notificationEntryManager,
      Lazy<ShadeController> shadeController,
      BubbleData bubbleData,
      DynamicPrivacyController privacyController) {
    return new NotificationViewHierarchyManager(
        context,
        mainHandler,
        notificationLockscreenUserManager,
        groupManager,
        visualStabilityManager,
        statusBarStateController,
        notificationEntryManager,
        shadeController,
        bubbleData,
        privacyController);
  }
}
