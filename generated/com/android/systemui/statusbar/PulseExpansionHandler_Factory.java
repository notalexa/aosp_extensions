// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.statusbar;

import android.content.Context;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class PulseExpansionHandler_Factory implements Factory<PulseExpansionHandler> {
  private final Provider<Context> contextProvider;

  private final Provider<NotificationWakeUpCoordinator> mWakeUpCoordinatorProvider;

  public PulseExpansionHandler_Factory(
      Provider<Context> contextProvider,
      Provider<NotificationWakeUpCoordinator> mWakeUpCoordinatorProvider) {
    this.contextProvider = contextProvider;
    this.mWakeUpCoordinatorProvider = mWakeUpCoordinatorProvider;
  }

  @Override
  public PulseExpansionHandler get() {
    return provideInstance(contextProvider, mWakeUpCoordinatorProvider);
  }

  public static PulseExpansionHandler provideInstance(
      Provider<Context> contextProvider,
      Provider<NotificationWakeUpCoordinator> mWakeUpCoordinatorProvider) {
    return new PulseExpansionHandler(contextProvider.get(), mWakeUpCoordinatorProvider.get());
  }

  public static PulseExpansionHandler_Factory create(
      Provider<Context> contextProvider,
      Provider<NotificationWakeUpCoordinator> mWakeUpCoordinatorProvider) {
    return new PulseExpansionHandler_Factory(contextProvider, mWakeUpCoordinatorProvider);
  }

  public static PulseExpansionHandler newPulseExpansionHandler(
      Context context, NotificationWakeUpCoordinator mWakeUpCoordinator) {
    return new PulseExpansionHandler(context, mWakeUpCoordinator);
  }
}
