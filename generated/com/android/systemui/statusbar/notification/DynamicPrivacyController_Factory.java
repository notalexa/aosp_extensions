// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.statusbar.notification;

import android.content.Context;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DynamicPrivacyController_Factory implements Factory<DynamicPrivacyController> {
  private final Provider<Context> contextProvider;

  private final Provider<NotificationLockscreenUserManager>
      notificationLockscreenUserManagerProvider;

  public DynamicPrivacyController_Factory(
      Provider<Context> contextProvider,
      Provider<NotificationLockscreenUserManager> notificationLockscreenUserManagerProvider) {
    this.contextProvider = contextProvider;
    this.notificationLockscreenUserManagerProvider = notificationLockscreenUserManagerProvider;
  }

  @Override
  public DynamicPrivacyController get() {
    return provideInstance(contextProvider, notificationLockscreenUserManagerProvider);
  }

  public static DynamicPrivacyController provideInstance(
      Provider<Context> contextProvider,
      Provider<NotificationLockscreenUserManager> notificationLockscreenUserManagerProvider) {
    return new DynamicPrivacyController(
        contextProvider.get(), notificationLockscreenUserManagerProvider.get());
  }

  public static DynamicPrivacyController_Factory create(
      Provider<Context> contextProvider,
      Provider<NotificationLockscreenUserManager> notificationLockscreenUserManagerProvider) {
    return new DynamicPrivacyController_Factory(
        contextProvider, notificationLockscreenUserManagerProvider);
  }

  public static DynamicPrivacyController newDynamicPrivacyController(
      Context context, NotificationLockscreenUserManager notificationLockscreenUserManager) {
    return new DynamicPrivacyController(context, notificationLockscreenUserManager);
  }
}
