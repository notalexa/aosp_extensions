// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.tuner;

import android.content.Context;
import android.os.Handler;
import com.android.systemui.util.leak.LeakDetector;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class TunerServiceImpl_Factory implements Factory<TunerServiceImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<Handler> bgHandlerProvider;

  private final Provider<LeakDetector> leakDetectorProvider;

  public TunerServiceImpl_Factory(
      Provider<Context> contextProvider,
      Provider<Handler> bgHandlerProvider,
      Provider<LeakDetector> leakDetectorProvider) {
    this.contextProvider = contextProvider;
    this.bgHandlerProvider = bgHandlerProvider;
    this.leakDetectorProvider = leakDetectorProvider;
  }

  @Override
  public TunerServiceImpl get() {
    return provideInstance(contextProvider, bgHandlerProvider, leakDetectorProvider);
  }

  public static TunerServiceImpl provideInstance(
      Provider<Context> contextProvider,
      Provider<Handler> bgHandlerProvider,
      Provider<LeakDetector> leakDetectorProvider) {
    return new TunerServiceImpl(
        contextProvider.get(), bgHandlerProvider.get(), leakDetectorProvider.get());
  }

  public static TunerServiceImpl_Factory create(
      Provider<Context> contextProvider,
      Provider<Handler> bgHandlerProvider,
      Provider<LeakDetector> leakDetectorProvider) {
    return new TunerServiceImpl_Factory(contextProvider, bgHandlerProvider, leakDetectorProvider);
  }

  public static TunerServiceImpl newTunerServiceImpl(
      Context context, Handler bgHandler, LeakDetector leakDetector) {
    return new TunerServiceImpl(context, bgHandler, leakDetector);
  }
}
