// Generated by Dagger (https://google.github.io/dagger).
package com.android.systemui.util;

import com.android.systemui.SystemUIFactory;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class InjectionInflationController_Factory
    implements Factory<InjectionInflationController> {
  private final Provider<SystemUIFactory.SystemUIRootComponent> rootComponentProvider;

  public InjectionInflationController_Factory(
      Provider<SystemUIFactory.SystemUIRootComponent> rootComponentProvider) {
    this.rootComponentProvider = rootComponentProvider;
  }

  @Override
  public InjectionInflationController get() {
    return provideInstance(rootComponentProvider);
  }

  public static InjectionInflationController provideInstance(
      Provider<SystemUIFactory.SystemUIRootComponent> rootComponentProvider) {
    return new InjectionInflationController(rootComponentProvider.get());
  }

  public static InjectionInflationController_Factory create(
      Provider<SystemUIFactory.SystemUIRootComponent> rootComponentProvider) {
    return new InjectionInflationController_Factory(rootComponentProvider);
  }

  public static InjectionInflationController newInjectionInflationController(
      SystemUIFactory.SystemUIRootComponent rootComponent) {
    return new InjectionInflationController(rootComponent);
  }
}
